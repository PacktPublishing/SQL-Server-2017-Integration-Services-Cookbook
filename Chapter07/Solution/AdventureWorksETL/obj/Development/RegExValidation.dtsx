<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2017 7:52:25 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SQL2016EIM"
  DTS:CreatorName="SQL2016EIM\Administrator"
  DTS:DTSID="{511A7C77-AD5B-4F06-A3C3-D35CA0CD18F3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0500.272"
  DTS:LocaleID="1033"
  DTS:ObjectName="RegExValidation"
  DTS:PackageType="5"
  DTS:VersionBuild="19"
  DTS:VersionGUID="{4B57D6E2-054F-4F98-9D54-D6DD91EB9DF5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PersonData]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{4CA5CBDE-797F-4FC6-9E44-3084A19B36AB}"
      DTS:ObjectName="PersonData">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1060"
          DTS:Unicode="True"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\SSIS2016Cookbook\Chapter07\Files\Ch07_PersonData.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Title"
              DTS:DTSID="{37E7E11A-720C-443A-949E-4F18F8DA565D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{ADBF16B6-A8FE-4DB2-A1FB-1A0BFA11699D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="MiddleName"
              DTS:DTSID="{ACB14408-27AD-4E24-956E-56CCB3DCA620}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LastName"
              DTS:DTSID="{FBC6E2F8-77D2-4C3B-888C-C59EE5A275AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Suffix"
              DTS:DTSID="{34079D94-8F3E-4D7A-BB71-D4066E8C75D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="EmailAddress"
              DTS:DTSID="{A32E724D-6F62-411E-B14D-3253BE0CBE10}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DAA0EACB-12FF-4946-98B2-D33E1B8DB048}"
      DTS:ObjectName="DataProfileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\SSIS2016Cookbook\Chapter07\Files\DataProfiling.xml</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8EE96D84-88A9-46E3-AE98-8673762AEB85}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailRegEx1">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D42DEE9-EBAF-4974-A9E2-F363F253D3D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailRegEx2">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ReadPatterns"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{CE3C1845-8DC5-4711-ABA9-4B5CCE146173}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ReadPatterns"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b5226295bed5447299d619d03c87dc95"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::EmailRegEx1,User::EmailRegEx2">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b5226295bed5447299d619d03c87dc95")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b5226295bed5447299d619d03c87dc95")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_b5226295bed5447299d619d03c87dc95.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b82b53f4-08f2-4cc6-ad2e-0a2d87788765}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b5226295bed5447299d619d03c87dc95</RootNamespace>
    <AssemblyName>ST_b5226295bed5447299d619d03c87dc95</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
#endregion

namespace ST_b5226295bed5447299d619d03c87dc95
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        private string fileName = @"C:\SSIS2016Cookbook\Chapter07\Files\DataProfiling.xml";
        private string profileNamespaceUri = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/";
        private string erx1Path = "/default:DataProfile/default:DataProfileOutput/default:Profiles" +
        "/default:ColumnPatternProfile[default:Column[@Name='EmailAddress']]" +
        "/default:TopRegexPatterns/default:PatternDistributionItem[1]/default:RegexText/text()";
        private string erx2Path = "/default:DataProfile/default:DataProfileOutput/default:Profiles" +
        "/default:ColumnPatternProfile[default:Column[@Name='EmailAddress']]" +
        "/default:TopRegexPatterns/default:PatternDistributionItem[2]/default:RegexText/text()";

        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            // TODO: Add your code here
            // Local variables
            string profilePath;
            XmlDocument profileOutput = new XmlDocument();
            XmlNamespaceManager profileNSM;
            XmlNode regExNode1;
            XmlNode regExNode2;

            // Open output file
            profilePath = fileName;
            profileOutput.Load(profilePath);
            profileNSM = new XmlNamespaceManager(profileOutput.NameTable);
            profileNSM.AddNamespace("default", profileNamespaceUri);

            // Get regExNodes
            regExNode1 = profileOutput.SelectSingleNode(erx1Path, profileNSM);
            regExNode2 = profileOutput.SelectSingleNode(erx2Path, profileNSM);

            // Assign variable values
            Dts.Variables["User::EmailRegEx1"].Value = regExNode1.Value;
            Dts.Variables["User::EmailRegEx2"].Value = regExNode2.Value;

            // Show variable values
            MessageBox.Show(Dts.Variables["User::EmailRegEx1"].Value.ToString());
            MessageBox.Show(Dts.Variables["User::EmailRegEx2"].Value.ToString());


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_b5226295bed5447299d619d03c87dc95</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_b5226295bed5447299d619d03c87dc95</msb:DisplayName>
		<msb:ProjectId>{22BECAF0-B688-416F-8F5C-D2771F429A4C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_b5226295bed5447299d619d03c87dc95.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5226295bed5447299d619d03c87dc95.Properties.Settings.get_Default():ST_b5226295bed5447299d619d03c87dc95.Properties.Sett" +
    "ings")]

namespace ST_b5226295bed5447299d619d03c87dc95.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5226295bed5447299d619d03c87dc95.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5226295bed5447299d619d03c87dc95.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5226295bed5447299d619d03c87dc95.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b5226295bed5447299d619d03c87dc95.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b5226295bed5447299d619d03c87dc95.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b5226295bed5447299d619d03c87dc95.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJKiLlkAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAijQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADg0AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
NAAAAAAAAEgAAAACAAUA0CEAALARAAABAAAAAAAAAIAzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBADiAAAAAQAAEXMQAAAKAnsBAAAECiUGbxEAAAolbxIA
AApzEwAACgsHcgEAAHACewIAAARvFAAACiUCewMAAAQHbxUAAAoMAnsEAAAEB28VAAAKDQIoFgAA
Cm8XAAAKchEAAHBvGAAACghvGQAACm8aAAAKAigWAAAKbxcAAApyNQAAcG8YAAAKCW8ZAAAKbxoA
AAoCKBYAAApvFwAACnIRAABwbxgAAApvGwAACm8cAAAKKB0AAAomAigWAAAKbxcAAApyNQAAcG8Y
AAAKbxsAAApvHAAACigdAAAKJgIoFgAAChZvHgAACirOAnJZAABwfQEAAAQCcsUAAHB9AgAABAJy
OQEAcH0DAAAEAnLqAgBwfQQAAAQCKB8AAAoqHgIoIAAACiqufgUAAAQtHnKbBABw0AMAAAIoIQAA
Cm8iAAAKcyMAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigkAAAKKi5zCAAA
BoAHAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFgEAAAjfgAAxAQAADgG
AAAjU3RyaW5ncwAAAAD8CgAAEAUAACNVUwAMEAAAEAAAACNHVUlEAAAAHBAAAJQBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAjAAAABQAAAAoAAAAJAAAAAQAAACQAAAACAAAA
EAAAAAEAAAACAAAAAwAAAAQAAAABAAAABgAAAAEAAAABAAAAAAD0AwEAAAAAAAYAdALjBAYAAwPj
BAYAwAHQBA8AVwUAAAYA7QF9BAYAVwJ9BAYAOAJ9BAYA6gJ9BAYAlAJ9BAYArQJ9BAYABAJ9BAYA
HwI7AwoAyAKjAwoAPwGjAw4AmwQcBA4AkQAcBAYANwQwBAYAowHQBAYA3wUwBAYAswQDBQYAjwRo
BBIAcwHeAxIA1AHeAxIAWwFTBAYAiAHjBA4ADgYcBA4ApwAcBAoAzAOjAxYAmQXqABYAtADqABoA
HwasBRoA8gWsBQYACgEwBAYAvQAwBAYALgZ9BAAAAAAlAAAAAAABAAEAAQAQAEgEAQA5AAEAAQAA
ABAACgVmBU0ABQADAAABEACjBWYFYQAHAAcAAwEAANEFAABFAAgACgABAOEAlQABAHADlQABAF4D
lQABAGcDlQARADwEmAARAC8BnAARAHAAoAAGBk0ApABWgMEFpwBWgA8BpwBQIAAAAACGAE4EBgAB
AD4hAAAAAIYYwwQGAAEAciEAAAAAgxjDBAYAAQB6IQAAAACTCK8EqwABAKYhAAAAAJMIFwGwAAEA
rSEAAAAAkwgjAbUAAQC1IQAAAACWCOYFuwACALwhAAAAAIYYwwQGAAIAxCEAAAAAkRjJBMAAAgAA
AAEANQMJAMMEAQARAMMEBgAZAMMECgApAMMEEAAxAMMEEAA5AMMEEABBAMMEEABJAMMEEABRAMME
EABZAMMEEABhAMMEEABpAMMEBgCRAMMEBgC5AMMEFQDJAMMEBgDRAMMEBgDRAF4AEADRAJkAJQB5
AMMEKgB5AGMAMACBAIAANgBxAMkFPgDhAJUFQwDpACcESACBACEDTgDxACsDUgDxACEDVwCZAFUD
TgD5ABoGWwDhAP8FAQBxAMMEBgCZAMMEBgAJAc8AYgAJASoGawChAMMEcQDBAMMEBgAIACQAiwAI
ACgAkAApAHMA+wAuAAsA0wAuABMA3AAuABsA+wAuACMABAEuACsALQEuADMALQEuADsALQEuAEMA
BAEuAEsAMwEuAFMALQEuAFsASgFDAGMAkABJAHMA+wBjAGsAkADhAHsAkAAbAAMAAQAEAAMAAACz
BMQAAAA3AckAAADqBc4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADYGJFUAAAAAAAA
AQAAAAQAAAAAAAAAAAAAAHkAVQAAAAAADgAAAAAAAAAAAAAAggCEAwAAAAAEAAAAAAAAAAAAAAB5
ABwEAAAAAAQAAAAAAAAAAAAAAHkAMAQAAAAADgAAAAAAAAAAAAAAggAuAAAAAAAEAAAAAAAAAAAA
AAB5AKwFAAAAAAAAAAABAAAAFAUAAAUAAgAAAAAAAFNUX2I1MjI2Mjk1YmVkNTQ0NzI5OWQ2MTlk
MDNjODdkYzk1ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AG1zY29ybGliAExvYWQAQWRkTmFtZXNwYWNlAGRlZmF1bHRJbnN0YW5jZQBTZWxlY3RTaW5nbGVO
b2RlAFhtbE5vZGUAZ2V0X05hbWVUYWJsZQBYbWxOYW1lVGFibGUAVmFyaWFibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZmlsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGVyeDFQYXRoAGVyeDJQYXRoAHBy
b2ZpbGVOYW1lc3BhY2VVcmkATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNUX2I1MjI2Mjk1YmVkNTQ0NzI5OWQ2MTlkMDNjODdkYzk1LmRsbABT
eXN0ZW0uWG1sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Q3VsdHVyZUluZm8AWG1sTmFtZXNwYWNlTWFuYWdlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9y
AC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2I1MjI2Mjk1YmVkNTQ0NzI5OWQ2MTlkMDNjODdkYzk1LlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9iNTIyNjI5NWJl
ZDU0NDcyOTlkNjE5ZDAzYzg3ZGM5NS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MA
U3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0
AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABYbWxEb2N1bWVudABTaG93
AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAD2QAZQBmAGEAdQBsAHQAACNVAHMAZQByADoAOgBF
AG0AYQBpAGwAUgBlAGcARQB4ADEAACNVAHMAZQByADoAOgBFAG0AYQBpAGwAUgBlAGcARQB4ADIA
AGtDADoAXABTAFMASQBTADIAMAAxADYAQwBvAG8AawBiAG8AbwBrAFwAQwBoAGEAcAB0AGUAcgAw
ADcAXABGAGkAbABlAHMAXABEAGEAdABhAFAAcgBvAGYAaQBsAGkAbgBnAC4AeABtAGwAAHNoAHQA
dABwADoALwAvAHMAYwBoAGUAbQBhAHMALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AcwBx
AGwAcwBlAHIAdgBlAHIALwAyADAAMAA4AC8ARABhAHQAYQBEAGUAYgB1AGcAZwBlAHIALwAAga8v
AGQAZQBmAGEAdQBsAHQAOgBEAGEAdABhAFAAcgBvAGYAaQBsAGUALwBkAGUAZgBhAHUAbAB0ADoA
RABhAHQAYQBQAHIAbwBmAGkAbABlAE8AdQB0AHAAdQB0AC8AZABlAGYAYQB1AGwAdAA6AFAAcgBv
AGYAaQBsAGUAcwAvAGQAZQBmAGEAdQBsAHQAOgBDAG8AbAB1AG0AbgBQAGEAdAB0AGUAcgBuAFAA
cgBvAGYAaQBsAGUAWwBkAGUAZgBhAHUAbAB0ADoAQwBvAGwAdQBtAG4AWwBAAE4AYQBtAGUAPQAn
AEUAbQBhAGkAbABBAGQAZAByAGUAcwBzACcAXQBdAC8AZABlAGYAYQB1AGwAdAA6AFQAbwBwAFIA
ZQBnAGUAeABQAGEAdAB0AGUAcgBuAHMALwBkAGUAZgBhAHUAbAB0ADoAUABhAHQAdABlAHIAbgBE
AGkAcwB0AHIAaQBiAHUAdABpAG8AbgBJAHQAZQBtAFsAMQBdAC8AZABlAGYAYQB1AGwAdAA6AFIA
ZQBnAGUAeABUAGUAeAB0AC8AdABlAHgAdAAoACkAAYGvLwBkAGUAZgBhAHUAbAB0ADoARABhAHQA
YQBQAHIAbwBmAGkAbABlAC8AZABlAGYAYQB1AGwAdAA6AEQAYQB0AGEAUAByAG8AZgBpAGwAZQBP
AHUAdABwAHUAdAAvAGQAZQBmAGEAdQBsAHQAOgBQAHIAbwBmAGkAbABlAHMALwBkAGUAZgBhAHUA
bAB0ADoAQwBvAGwAdQBtAG4AUABhAHQAdABlAHIAbgBQAHIAbwBmAGkAbABlAFsAZABlAGYAYQB1
AGwAdAA6AEMAbwBsAHUAbQBuAFsAQABOAGEAbQBlAD0AJwBFAG0AYQBpAGwAQQBkAGQAcgBlAHMA
cwAnAF0AXQAvAGQAZQBmAGEAdQBsAHQAOgBUAG8AcABSAGUAZwBlAHgAUABhAHQAdABlAHIAbgBz
AC8AZABlAGYAYQB1AGwAdAA6AFAAYQB0AHQAZQByAG4ARABpAHMAdAByAGkAYgB1AHQAaQBvAG4A
SQB0AGUAbQBbADIAXQAvAGQAZQBmAGEAdQBsAHQAOgBSAGUAZwBlAHgAVABlAHgAdAAvAHQAZQB4
AHQAKAApAAFxUwBUAF8AYgA1ADIAMgA2ADIAOQA1AGIAZQBkADUANAA0ADcAMgA5ADkAZAA2ADEA
OQBkADAAMwBjADgANwBkAGMAOQA1AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAAAD8i3vYr1PvT78D3gW8cosaAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCQcE
DhI9EkESQQQgABJtBSABARJtBSACAQ4OByACEkEOEj0EIAAScQQgABJ1BSABEnkcAyAADgQgAQEc
AyAAHAYAARGAgQ4IAAESgIURgIkFIAASgI0HIAIBDhKAjQi3elxWGTTgiQiJhF3NgIDMkQQAAAAA
BAEAAAACBg4DBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJR
BAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfYjUyMjYyOTViZWQ1NDQ3Mjk5ZDYxOWQwM2M4N2RjOTUAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAYDQAAAAAAAAAAAAA
ejQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw0AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCRVNgYAAABAJFU2Bg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGIANQAyADIANgAyADkANQBiAGUAZAA1ADQANAA3ADIAOQA5AGQANgAxADkAZAAwADMA
YwA4ADcAZABjADkANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMANgAwAC4AMgAxADYANAA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGIANQAyADIANgAyADkANQBiAGUAZAA1ADQANAA3ADIAOQA5AGQANgAxADkAZAAwADMAYwA4
ADcAZABjADkANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYgA1ADIAMgA2ADIAOQA1AGIAZQBkADUANAA0ADcAMgA5ADkAZAA2ADEAOQBk
ADAAMwBjADgANwBkAGMAOQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGIANQAyADIANgAyADkANQBiAGUAZAA1ADQANAA3ADIAOQA5AGQANgAxADkAZAAw
ADMAYwA4ADcAZABjADkANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADYAMAAuADIAMQA2ADQAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADYAMAAuADIAMQA2ADQAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACMNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Validate Person Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C71EF917-6931-409F-8756-20958758AA67}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Validate Person Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Validate Person Data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Validate Person Data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Validate Person Data\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Validate Person Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Validate Person Data\Person Data"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1060"
              name="Person Data"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Validate Person Data\Person Data.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[PersonData]"
                  connectionManagerRefId="Package.ConnectionManagers[PersonData]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[FirstName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[MiddleName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[MiddleName]"
                      name="MiddleName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Suffix]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[Suffix]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Suffix]"
                      name="Suffix"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[EmailAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[EmailAddress]"
                      length="50"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[EmailAddress]"
                      name="EmailAddress"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="50"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                      dataType="wstr"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[MiddleName]"
                      dataType="wstr"
                      length="50"
                      name="MiddleName" />
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[Suffix]"
                      dataType="wstr"
                      length="50"
                      name="Suffix" />
                    <externalMetadataColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].ExternalColumns[EmailAddress]"
                      dataType="wstr"
                      length="50"
                      name="EmailAddress" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      dataType="nText"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Validate Person Data\Valid or Invalid Email"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Valid or Invalid Email"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input].Columns[IsValidEmail]"
                      cachedDataType="bool"
                      cachedName="IsValidEmail"
                      lineageId="Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput].Columns[IsValidEmail]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Valid Email]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Valid Email"
                  synchronousInputId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput].Columns[IsValidEmail]}</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsValidEmail</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Invalid Email]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Invalid Email"
                  synchronousInputId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Validate Person Data\Validate Email"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Validate Email"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"PersonDataInput", StringComparison.Ordinal))
        {
            PersonDataInput_ProcessInput(new PersonDataInputBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void PersonDataInput_ProcessInput(PersonDataInputBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            PersonDataInput_ProcessInputRow(Buffer);
        }
    }

    public virtual void PersonDataInput_ProcessInputRow(PersonDataInputBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String DataProfileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataProfileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System;
using System.Data;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Xml;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private const String DATA_PROFILE_NAMESPACE = "http://schemas.microsoft.com/sqlserver/2008/DataDebugger/";
    private const String DATA_PROFILE_NAMESPACE_ALIAS = "dp";

    private String _regexElementXPath = "/dp:DataProfile/dp:DataProfileOutput/dp:Profiles" +
        "/dp:ColumnPatternProfile[dp:Column[@Name='EmailAddress']]" +
        "/dp:TopRegexPatterns/dp:PatternDistributionItem/dp:RegexText/text()";

    private List<String> _regexPatterns = new List<String>();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        _regexPatterns.AddRange(this.LoadRegularExpressions(Variables.DataProfileName));
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from PersonDataInput.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void PersonDataInput_ProcessInputRow(PersonDataInputBuffer Row)
    {
        Row.IsValidEmail = this.IsValidEmail(Row.EmailAddress);
    }

    private List<String> LoadRegularExpressions(String dataProfileName)
    {
        List<String> result = new List<String>();
        XmlDocument dataProfile = new XmlDocument();
        dataProfile.Load(dataProfileName);
        XmlNamespaceManager dataProfileNSM = new XmlNamespaceManager(dataProfile.NameTable);
        dataProfileNSM.AddNamespace(DATA_PROFILE_NAMESPACE_ALIAS, DATA_PROFILE_NAMESPACE);

        foreach (XmlNode regexPatternElement in dataProfile.SelectNodes(_regexElementXPath, dataProfileNSM))
        {
            String regexPattern = regexPatternElement.Value;
            if (!result.Contains(regexPattern))
            {
                result.Add(regexPattern);
            }
        }

        return result;
    }

    private Boolean IsValidEmail(String emailAddress)
    {
        Boolean result = false;
        if (!String.IsNullOrEmpty(emailAddress))
        {
            foreach (String regexPattern in _regexPatterns)
            {
                if (Regex.IsMatch(emailAddress, regexPattern, RegexOptions.IgnoreCase))
                {
                    result = true;
                    break;
                }
            }
        }
        return result;
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_626be07738ea41b3b11dcd2e7d78ea3f.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{50e4fee6-4371-4263-bc8b-651563f760fb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_626be07738ea41b3b11dcd2e7d78ea3f</RootNamespace>
    <AssemblyName>SC_626be07738ea41b3b11dcd2e7d78ea3f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_626be07738ea41b3b11dcd2e7d78ea3f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Settings.get_Default():SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Sett" +
    "ings")]

namespace SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class PersonDataInputBuffer: ScriptBuffer

{
    public PersonDataInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Title_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FirstName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FirstName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String MiddleName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool MiddleName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String LastName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool LastName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Suffix
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Suffix_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String EmailAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool EmailAddress_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Boolean IsValidEmail
    {
        set
        {
            this[6] = value;
        }
    }
    public bool IsValidEmail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_626be07738ea41b3b11dcd2e7d78ea3f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_626be07738ea41b3b11dcd2e7d78ea3f</msb:DisplayName>
		<msb:ProjectId>{F0B182F9-D5B2-479B-805B-45624754AF53}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_626be07738ea41b3b11dcd2e7d78ea3f.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_626be07738ea41b3b11dcd2e7d78ea3f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_626be07738ea41b3b11dcd2e7d78ea3f")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_626be07738ea41b3b11dcd2e7d78ea3f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_626be07738ea41b3b11dcd2e7d78ea3f.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGfJLlkAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAEj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMA8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
PAAAAAAAAEgAAAACAAUAqCMAAGAYAAABAAAAAAAAAAg8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAI4CKBAAAAoCewQAAAQCAnsGAAAEbx4AAAYoBAAABm8RAAAK
Kh4CKBIAAAoqTgMCA28SAAAGKAUAAAZvFAAABiobMAQAgwAAAAEAABFzEwAACgpzFAAACiUDbxUA
AAolbxYAAApzFwAACgsHcgEAAHByBwAAcG8YAAAKAnsDAAAEB28ZAAAKbxoAAAoMKyEIbxsAAAp0
IgAAAW8cAAAKDQYJbx0AAAotBwYJbx4AAAoIbx8AAAot194UCHURAAABEwQRBCwHEQRvIAAACtwG
KgABEAAAAgBAAC1tABQAAAAAGzADAEkAAAACAAARFgoDKCEAAAotPQJ7BAAABG8iAAAKCysWEgEo
IwAACgwDCBcoJAAACiwEFwreGRIBKCUAAAot4d4OEgH+FgIAABtvIAAACtwGKgAAAAEQAAACABYA
IzkADgAAAAB2AnJ7AABwfQMAAAQCcxMAAAp9BAAABAIoGAAABioqAgMEBSgmAAAKKlICeycAAAoC
eygAAAoWlG8pAAAKKiICFigqAAAKKlICeycAAAoCeygAAAoXlG8pAAAKKiICFygqAAAKKlICeycA
AAoCeygAAAoYlG8pAAAKKiICGCgqAAAKKlICeycAAAoCeygAAAoZlG8pAAAKKiICGSgqAAAKKlIC
eycAAAoCeygAAAoalG8pAAAKKiICGigqAAAKKlICeycAAAoCeygAAAoblG8pAAAKKiICGygqAAAK
KjoCHAOMJwAAASgrAAAKKloDLAgCHCgsAAAKKnLWAQBwcy0AAAp6HgIoLgAACioeAigvAAAKKn4C
KDAAAAoCAnMcAAAGfQUAAAQCAnMdAAAGfQYAAAQqkgRycwIAcBpvMQAACiwVAgUCAygyAAAKDgRz
BwAABm8aAAAGKkorBwIDbxsAAAYDbxYAAAYt8SoGKjoCKDMAAAoCA30HAAAEKjoCKDMAAAoCA30I
AAAEKpYCewgAAARvNAAACnKTAgBwbzUAAAooNgAACm83AAAKdCQAAAEqHgIoMwAACiqufgkAAAQt
HnKzAgBw0AcAAAIoOAAACm85AAAKczoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAA
BCoeAig7AAAKKi5zJAAABoALAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAAECAAAI34AAHAIAADsCQAAI1N0cmluZ3MAAAAAXBIAACgDAAAjVVMAhBUAABAAAAAjR1VJRAAA
AJQVAADMAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAQAAAPoBMwAWAAABAAAAMAAAAAgAAAALAAAA
JQAAABEAAAA7AAAAAgAAABAAAAACAAAABAAAABIAAAATAAAAAgAAAAEAAAAGAAAAAQAAAAAAbgQB
AAAAAAAGAAsD3QYGAJ8D3QYGAFcCygYPAFEHAAAGAIQCnQUGAO4CnQUGAM8CnQUGAIYDnQUGACsD
nQUGAEQDnQUGAJsCnQUGALYCCAQKAF8DnAEGAEgAnQAOAFMGMAUGAKMGJQgGAAoBTQU7ALIGAAAK
ADAGnAESACEGnAEKAOYFnAEKAMcInAEGAH4ITQUGADoCygYGAGsG/QYGANoFiAUWAAoCRwQWAGsC
RwQWAOoBcwUGAB8C3QYGADoAnQAOAJ0IMAUOAP0AMAUOAN4AMAUOAAAJMAUGACUETQUWAL8J7wcW
AEQI7wcGAGAFTQUGAK8FTQUGAMkFTQUaABEAewYaAAEAewZbAGcJAAAaACIAewYGAL0BTQUGABYB
TQUGANQJnQUAAAAATwAAAAAAAQABAAEAEABoBQAAEAABAAEAAQAQAD0GAABNAAUABwABABAAqQgA
AFkABQAYAAEAEAA4CAAAXQAHABwAAQAQAKcHAABdAAgAHQAAABAABAdsB10ACQAfAAABEADWB2wH
dQALACMAUYBgAIoBUYB3AIoBAQA0BIoBAQBRCI0BBgA4CJQBBgCnB5gBAQC3CJwBAQC3CJwBEQBU
BaABEQDaAaQBEQDOAKgBUCAAAAAAxgC9AwYAAQB0IAAAAADGAMgDBgABAHwgAAAAAMYAlwmsAQEA
kCAAAAAAgQAOCLIBAgAwIQAAAACBAGEEuwEDAJghAAAAAIYYvQYGAAQAtiEAAAAAhhi9Bp8ABADB
IQAAAACGCDoBXwAHANYhAAAAAIYIlgRvAAcA3yEAAAAAhgiEAV8ABwD0IQAAAACGCNEEbwAHAP0h
AAAAAIYIRAFfAAcAEiIAAAAAhginBG8ABwAbIgAAAACGCHcBXwAHADAiAAAAAIYIvQRvAAcAOSIA
AAAAhgjFCV8ABwBOIgAAAACGCBYFbwAHAFciAAAAAIYIYAhfAAcAbCIAAAAAhgj+BG8ABwB1IgAA
AACGCF0EwAEHAIQiAAAAAIYI5gTAAQgAmyIAAAAAhgC3CW8ACQCjIgAAAACGAIUIbwAJAKsiAAAA
AIYYvQYGAAkAyyIAAAAAxgA9CcUBCQDwIgAAAADGAS0JrAENAAMjAAAAAMYBlwmsAQ4ABSMAAAAA
hhi9Bs8BDwAUIwAAAACGGL0GzwEQACMjAAAAAIYIUwFfABEASSMAAAAAgxi9BgYAEQBRIwAAAACT
CGcG1QERAH0jAAAAAJMIwgHaAREAhCMAAAAAkwjOAd8BEQCMIwAAAACWCJEI5QESAJMjAAAAAIYY
vQYGABIAmyMAAAAAkRjDBuoBEgAAAAEAuwkAAAEAZwEAAAEAcQgAAAEATAYAAAIAsQcAAAMA9AUA
AAEA3gMAAAEA3gMAAAEAWAAAAAIAkgEAAAMATAYAAAQA9AUAAAEATAYAAAEAuwkAAAEAzQgAAAEA
zQgAAAEA3gMJAL0GAQARAL0GBgAZAL0GCgApAL0GEAAxAL0GEAA5AL0GEABBAL0GEABJAL0GEABR
AL0GEABZAL0GEABhAL0GEABpAL0GBgDBAL0GBgDhAL0GFQDxAL0GBgCxAL0DBgAMAOYAIQCxAMgD
BgAMAL0GBgABAb0GBgABAbgAEAABAe8AOgB5AL0GQAB5AMEARwARAWAHTQAZAa8GVgCBANcIWwAR
AdQDXwAMAOYHYwAMAL0AaQCBAEoJbwCJAAICBgAhAd0JfQAMAK8GggAUANcIkQApASwElgAUAEoJ
bwCZAL0GnwCZAEwGqQCZALEHrQChACIEsQCZACEFtgCZAEQFuwCZACgFAQBBAb0GEACZALcJbwCZ
AIUIbwCxAL0GBgAhAd8HwQCxAMUHyQC5AL0GBgCxAJsHzwBRATsF1QCxAIIJ3ABZAVMJ4gBxASgB
6QBxAdAJ8gDJAL0G+ADpAL0GBgAOAAQAEgEOAAgAhQEuAAsABQIuABMADgIuABsALQIuACMANgIu
ACsAXwIuADMAXwIuADsAXwIuAEMANgIuAEsAZQIuAFMAXwIuAFsAfAJDAGMAxgLjAGsAxgJhAXsA
xgIJAnMALQIpAnMALQIrAHMAAwABAAYADwAHABAACAASAAAAPgHuAQAAmgTyAQAAiAHuAQAA1QTy
AQAASAHuAQAAqwTyAQAAewHuAQAAwQTyAQAAyQnuAQAAGgXyAQAAZAjuAQAAAgXyAQAAYQTyAQAA
6gTyAQAAVwHuAQAAawb2AQAA4gH7AQAAlQgAAgIACAADAAIACQAFAAIACgAHAAIACwAJAAIADAAL
AAIADQANAAIADgAPAAIADwARAAIAEAATAAIAEQAVAAIAEgAXAAIAEwAZAAEAFAAbAAEAFQAdAAIA
HgAfAAIAIAAhAAIAIQAjAAEAIgAjAAIAIwAlABsAiwAEgAAAAQAAAAAAAAAAAAAAAADkAwAABAAA
AAAAAAAAAAAAAAGUAAAAAAAOAAAAAAAAAAAAAAAJAeMIAAAAAAQAAAAAAAAAAAAAAAABMAUAAAAA
DgAAAAAAAAAAAAAACQEMCQAAAAAEAAAAAAAAAAAAAAAAAU0FAAAAAA4AAAAAAAAAAAAAAAkB/gUA
AAAAAAAAAAEAAAAOBwAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2
YWx1YXRvckNvbnRleHQxMDAASUVudW1lcmFibGVgMQBMaXN0YDEAPE1vZHVsZT4ASW5wdXRJRABE
QVRBX1BST0ZJTEVfTkFNRVNQQUNFAERBVEFfUFJPRklMRV9OQU1FU1BBQ0VfQUxJQVMAbXNjb3Js
aWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATG9hZABBZGQAQWRkTmFtZXNwYWNlAGRlZmF1
bHRJbnN0YW5jZQBYbWxOb2RlAEFkZFJhbmdlAGdldF9OYW1lVGFibGUAWG1sTmFtZVRhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9UaXRsZQBn
ZXRfTWlkZGxlTmFtZQBnZXRfRGF0YVByb2ZpbGVOYW1lAGRhdGFQcm9maWxlTmFtZQBnZXRfTGFz
dE5hbWUAZ2V0X0ZpcnN0TmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9WYWx1ZQB2YWx1ZQBTQ182MjZiZTA3NzM4
ZWE0MWIzYjExZGNkMmU3ZDc4ZWEzZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmlu
ZwBJc01hdGNoAF9yZWdleEVsZW1lbnRYUGF0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAc2V0X0lz
VmFsaWRFbWFpbABTQ182MjZiZTA3NzM4ZWE0MWIzYjExZGNkMmU3ZDc4ZWEzZi5kbGwAZ2V0X1Rp
dGxlX0lzTnVsbABnZXRfTWlkZGxlTmFtZV9Jc051bGwAZ2V0X0xhc3ROYW1lX0lzTnVsbABnZXRf
Rmlyc3ROYW1lX0lzTnVsbABzZXRfSXNWYWxpZEVtYWlsX0lzTnVsbABnZXRfRW1haWxBZGRyZXNz
X0lzTnVsbABnZXRfU3VmZml4X0lzTnVsbABTZXROdWxsAFN5c3RlbS5YbWwAZ2V0X0l0ZW0Ac2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1h
cABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABQaXBlbGluZUJ1
ZmZlcgBTY3JpcHRCdWZmZXIAUGVyc29uRGF0YUlucHV0QnVmZmVyAFhtbE5hbWVzcGFjZU1hbmFn
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldy
YXBwZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q182MjZiZTA3NzM4ZWE0MWIzYjExZGNkMmU3ZDc4ZWEzZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU2VsZWN0Tm9kZXMAU0NfNjI2YmUwNzczOGVhNDFiM2Ix
MWRjZDJlN2Q3OGVhM2YuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29s
dW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBTeXN0
ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMATG9hZFJlZ3VsYXJFeHByZXNzaW9ucwBTeXN0ZW0u
Q29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAUmVnZXhPcHRpb25zAF9yZWdleFBhdHRlcm5zAGdldF9F
bWFpbEFkZHJlc3MAZW1haWxBZGRyZXNzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABY
bWxEb2N1bWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
Z2V0X0N1cnJlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABYbWxOb2RlTGlzdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQZXJzb25EYXRhSW5wdXRfUHJvY2Vzc0lucHV0
AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQAUGVyc29uRGF0YUlucHV0X1Byb2Nlc3NJbnB1dFJvdwBOZXh0
Um93AFJlZ2V4AGdldF9TdWZmaXgAZ2V0X0Fzc2VtYmx5AElzTnVsbE9yRW1wdHkAAAAFZABwAABz
aAB0AHQAcAA6AC8ALwBzAGMAaABlAG0AYQBzAC4AbQBpAGMAcgBvAHMAbwBmAHQALgBjAG8AbQAv
AHMAcQBsAHMAZQByAHYAZQByAC8AMgAwADAAOAAvAEQAYQB0AGEARABlAGIAdQBnAGcAZQByAC8A
AIFZLwBkAHAAOgBEAGEAdABhAFAAcgBvAGYAaQBsAGUALwBkAHAAOgBEAGEAdABhAFAAcgBvAGYA
aQBsAGUATwB1AHQAcAB1AHQALwBkAHAAOgBQAHIAbwBmAGkAbABlAHMALwBkAHAAOgBDAG8AbAB1
AG0AbgBQAGEAdAB0AGUAcgBuAFAAcgBvAGYAaQBsAGUAWwBkAHAAOgBDAG8AbAB1AG0AbgBbAEAA
TgBhAG0AZQA9ACcARQBtAGEAaQBsAEEAZABkAHIAZQBzAHMAJwBdAF0ALwBkAHAAOgBUAG8AcABS
AGUAZwBlAHgAUABhAHQAdABlAHIAbgBzAC8AZABwADoAUABhAHQAdABlAHIAbgBEAGkAcwB0AHIA
aQBiAHUAdABpAG8AbgBJAHQAZQBtAC8AZABwADoAUgBlAGcAZQB4AFQAZQB4AHQALwB0AGUAeAB0
ACgAKQABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAB9QAGUAcgBz
AG8AbgBEAGEAdABhAEkAbgBwAHUAdAAAH0QAYQB0AGEAUAByAG8AZgBpAGwAZQBOAGEAbQBlAABx
UwBDAF8ANgAyADYAYgBlADAANwA3ADMAOABlAGEANAAxAGIAMwBiADEAMQBkAGMAZAAyAGUANwBk
ADcAOABlAGEAMwBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AACFnTaaGYQJSKLiaFq5vI/vAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtBRUSOQEOCSABARUS
fQETAA4HBRUSOQEOEj0SQQ4SRQUgABKAhQYgAQESgIUFIAIBDg4IIAISgI0OEj0EIAASQQMgABwD
IAAOBSABAhMABSABARMAAyAAAgkHAwIVEUkBDg4EAAECDgggABURSQETAAUVEUkBDgQgABMACAAD
Ag4OEYCZCSADARJRHQgSVQMGElEDBh0IBCABDggEIAECCAUgAgEIHAcgAgIOEYClBSABHQgIBSAA
EoCpBiABEoCtHAUAABKAsQYgARwSgLUIAAESgLkRgL0FIAASgMEHIAIBDhKAwQi3elxWGTTgiQiJ
hF3NgIDMkXJoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgBtAGkAYwByAG8AcwBvAGYAdAAu
AGMAbwBtAC8AcwBxAGwAcwBlAHIAdgBlAHIALwAyADAAMAA4AC8ARABhAHQAYQBEAGUAYgB1AGcA
ZwBlAHIALwAEZABwAAIGDgYGFRI5AQ4DBhIUAwYSGAMGElkDBhJlAwYSaQMGEiAFIAEBEgwIIAEV
EjkBDg4EIAECDgQgAQECCSAEAQgOElESVQUgAQESWQQAABJlBAAAEmkFAAEBEmkEAAASIAMAAAED
KAAOAygAAgQIABJlBAgAEmkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfNjI2YmUwNzczOGVhNDFiM2IxMWRjZDJlN2Q3OGVhM2YAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAA6DwAAAAAAAAAAAAAAj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQ8AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8ANgAyADYAYgBlADAANwA3ADMAOABlAGEANAAxAGIAMwBiADEAMQBkAGMAZAAyAGUANwBkADcA
OABlAGEAMwBmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA2ADIANgBiAGUAMAA3ADcA
MwA4AGUAYQA0ADEAYgAzAGIAMQAxAGQAYwBkADIAZQA3AGQANwA4AGUAYQAzAGYALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADYAMgA2AGIA
ZQAwADcANwAzADgAZQBhADQAMQBiADMAYgAxADEAZABjAGQAMgBlADcAZAA3ADgAZQBhADMAZgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA2ADIANgBiAGUA
MAA3ADcAMwA4AGUAYQA0ADEAYgAzAGIAMQAxAGQAYwBkADIAZQA3AGQANwA4AGUAYQAzAGYAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_626be07738ea41b3b11dcd2e7d78ea3f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::DataProfileName</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">93</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput]"
                  hasSideEffects="true"
                  name="PersonDataInput">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Title"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Title]" />
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[FirstName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FirstName"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[MiddleName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MiddleName"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[MiddleName]" />
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastName"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[Suffix]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Suffix"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[Suffix]" />
                    <inputColumn
                      refId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput].Columns[EmailAddress]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="EmailAddress"
                      lineageId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output].Columns[EmailAddress]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput]"
                  name="PersonDataOutput"
                  synchronousInputId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput].Columns[IsValidEmail]"
                      dataType="bool"
                      lineageId="Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput].Columns[IsValidEmail]"
                      name="IsValidEmail" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Validate Person Data.Paths[Flat File Source Output]"
              endId="Package\Validate Person Data\Validate Email.Inputs[PersonDataInput]"
              name="Flat File Source Output"
              startId="Package\Validate Person Data\Person Data.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Validate Person Data.Paths[Invalid Email]"
              endId="Package\Validate Person Data\Multicast.Inputs[Multicast Input 1]"
              name="Invalid Email"
              startId="Package\Validate Person Data\Valid or Invalid Email.Outputs[Invalid Email]" />
            <path
              refId="Package\Validate Person Data.Paths[PersonDataOutput]"
              endId="Package\Validate Person Data\Valid or Invalid Email.Inputs[Conditional Split Input]"
              name="PersonDataOutput"
              startId="Package\Validate Person Data\Validate Email.Outputs[PersonDataOutput]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{30CA012C-7548-4EA2-ACEF-D6BC7B88659A}"
      DTS:From="Package\ReadPatterns"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Validate Person Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="142,42"
          Id="Package\ReadPatterns"
          TopLeft="251,154.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Validate Person Data"
          TopLeft="233.5,256.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="322,196.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Validate Person Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Validate Person Data\Person Data"
          TopLeft="321.5,71.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Validate Person Data\Validate Email"
          TopLeft="317,173.5" />
        <EdgeLayout
          Id="Package\Validate Person Data.Paths[Flat File Source Output]"
          TopLeft="389.5,113.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="178,42"
          Id="Package\Validate Person Data\Valid or Invalid Email"
          TopLeft="300.5,275.5" />
        <EdgeLayout
          Id="Package\Validate Person Data.Paths[PersonDataOutput]"
          TopLeft="389.5,215.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,42"
          Id="Package\Validate Person Data\Multicast"
          TopLeft="329.5,377.5" />
        <EdgeLayout
          Id="Package\Validate Person Data.Paths[Invalid Email]"
          TopLeft="389.5,317.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.73873046875,21.37548828125,57.4774609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>